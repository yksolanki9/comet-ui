{"version":3,"file":"src_app_auth_register_register_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACM;AACE;AAEV;AAEyB;AAEvB;IAYlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAV9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,+DAAmB;YACnB,uDAAW;YACX,+EAAyB;YACzB,kEAAgB;SACjB;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACrBmB;AACkB;AAC3B;AACwB;IAOpD,YAAY,SAAZ,YAAY;IAGvB,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,EAAE,GAAG,IAAI,qDAAS,CAAC;YACtB,SAAS,EAAE,IAAI,uDAAW,CAAC,IAAI,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACvD,QAAQ,EAAE,IAAI,uDAAW,CAAC,IAAI,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACtD,KAAK,EAAE,IAAI,uDAAW,CAAC,IAAI,EAAE;gBAC3B,+DAAmB;gBACnB,4DAAgB;gBAChB,8DAAkB,CAAC,2CAA2C,CAAC;aAChE,CAAC;YACF,QAAQ,EAAE,IAAI,uDAAW,CAAC,IAAI,EAAE;gBAC9B,+DAAmB;gBACnB,gEAAoB,CAAC,CAAC,CAAC;aACxB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,KAAI,CAAC;IAErB,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YApCQ,mDAAM;YACN,2EAAW;;AAOP,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,uLAAmC;;KAEpC,CAAC;GACW,YAAY,CA4BxB;AA5BwB;;;;;;;;;;;;;;;ACVzB,iEAAe,mkFAAmkF","sources":["./src/app/auth/register/register-routing.module.ts","./src/app/auth/register/register.module.ts","./src/app/auth/register/register.page.ts","./src/app/auth/register/register.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    HttpClientModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  fg: FormGroup;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.fg = new FormGroup({\n      firstName: new FormControl(null, [Validators.required]),\n      lastName: new FormControl(null, [Validators.required]),\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n    });\n  }\n\n  ionViewWillEnter() {}\n\n  onSubmit(data) {\n    this.authService.register(data).subscribe(() => {\n      this.router.navigate(['/home']);\n    });\n  }\n}\n","export default \"<ion-content>\\n  <div class=\\\"h-max register\\\">\\n    <img class=\\\"register__logo\\\" src=\\\"../../../assets/images/comet-logo.png\\\" alt=\\\"comet-logo\\\">\\n    <form [formGroup]=\\\"fg\\\" (ngSubmit)=\\\"onSubmit(fg.value)\\\" class=\\\"w-max register__form\\\">\\n      <ion-grid>\\n        <ion-row class=\\\"register__form__input-container\\\">\\n          <ion-col size=\\\"12px\\\">\\n            <ion-icon class=\\\"register__form__icon\\\" name=\\\"person-outline\\\"></ion-icon>\\n          </ion-col>\\n          <ion-col>\\n            <ion-input class=\\\"register__form__input\\\" placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\"></ion-input>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid>\\n        <ion-row class=\\\"register__form__input-container\\\">\\n          <ion-col size=\\\"12px\\\">\\n            <ion-icon class=\\\"register__form__icon\\\" name=\\\"person-outline\\\"></ion-icon>\\n          </ion-col>\\n          <ion-col>\\n            <ion-input class=\\\"register__form__input\\\" placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\"></ion-input>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid>\\n        <ion-row class=\\\"register__form__input-container\\\">\\n          <ion-col size=\\\"12px\\\">\\n            <ion-icon class=\\\"register__form__icon\\\" name=\\\"mail-outline\\\"></ion-icon>\\n          </ion-col>\\n          <ion-col>\\n            <ion-input class=\\\"register__form__input\\\" inputmode=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\"></ion-input>\\n          </ion-col>\\n        </ion-row>\\n        <div *ngIf=\\\"fg.controls.email.touched && !fg.controls.email.valid\\\">Please enter a valid email</div>\\n      </ion-grid>\\n      <ion-grid>\\n        <ion-row class=\\\"register__form__input-container\\\">\\n          <ion-col size=\\\"12px\\\">\\n            <ion-icon class=\\\"register__form__icon\\\" name=\\\"lock-closed-outline\\\"></ion-icon>\\n          </ion-col>\\n          <ion-col>\\n            <ion-input class=\\\"register__form__input\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required></ion-input>\\n          </ion-col>\\n        </ion-row>\\n        <div *ngIf=\\\"fg.controls.password.touched && !fg.controls.password.valid\\\">Password is too short</div>\\n      </ion-grid>\\n      <ion-button class=\\\"register__form__cta\\\" color=\\\"dark\\\" expand=\\\"block\\\" size=\\\"large\\\" type=\\\"submit\\\" [disabled]=\\\"!fg.valid\\\"> REGISTER </ion-button>\\n    </form>\\n    <ion-text class=\\\"register__bottom-text\\\"> Already have an account? <a class=\\\"register__bottom-text--link\\\" [routerLink]=\\\"['/login']\\\">Log in here</a></ion-text>\\n  </div>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}